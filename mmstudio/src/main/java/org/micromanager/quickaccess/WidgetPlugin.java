///////////////////////////////////////////////////////////////////////////////
//PROJECT:       Micro-Manager
//-----------------------------------------------------------------------------
//
// AUTHOR:       Chris Weisiger, 2015
//
// COPYRIGHT:    University of California, San Francisco, 2015
//
// LICENSE:      This file is distributed under the BSD license.
//               License text is included with the source distribution.
//
//               This file is distributed in the hope that it will be useful,
//               but WITHOUT ANY WARRANTY; without even the implied warranty
//               of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
//               IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//               CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
//               INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES.

package org.micromanager.quickaccess;

import java.awt.Dimension;
import java.awt.Frame;

import javax.swing.JComponent;

import org.micromanager.PropertyMap;

/**
 * This plugin allows arbitrary controls ("widgets") to be included in the
 * Quick-Access Window. It gives you the maximum control over how your control
 * will appear and behave. However, it also requires you to implement the most
 * logic.
 */
public interface WidgetPlugin extends QuickAccessPlugin {
   /**
    * Create the GUI components for this control.
    * @param config A PropertyMap as output by configureControl used to
    *        configure this control. The PropertyMap may be empty or may be
    *        preserved from a previous session.
    */
   public JComponent createControl(PropertyMap config);

   /**
    * Generate configuration information that can be used to configure a
    * control generated by this plugin. This method is expected to block the
    * Event Dispatch Thread (EDT) -- thus, any configuration UI should be
    * modal. It is also only ever called from the EDT.
    * @param parent The Quick-Access Window
    */
   public PropertyMap configureControl(Frame parent);

   /**
    * Return the dimensionality of the widget, in cells. For example, a
    * value of 2x1 here would indicate a widget that is 2 cells wide and 1
    * tall. The size of a single cell is the CELL_WIDTH and CELL_HEIGHT
    * values in QuickAccessPlugin.
    */
   public Dimension getSize();
}
